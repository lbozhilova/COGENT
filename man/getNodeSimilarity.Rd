% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/networkSimilarity.R
\name{getNodeSimilarity}
\alias{getNodeSimilarity}
\title{Get the node similarity of two networks}
\usage{
getNodeSimilarity(D, mode = c("cor", "ksim", "L2"), align = FALSE, ...)
}
\arguments{
\item{D}{A list of two (named) numeric arrays.}

\item{mode}{Which measure to use for the comparison; one of "cor", "ksim", or
"L2". For details, see \code{\link[stats]{cor}},
\code{\link{calculateKSimilarity}} or
\code{\link{calculateEuclideanDistance}} respectively.}

\item{align}{Logical; Whether to align the two node metric arrays. Only set
to TRUE if this is not done automatically.}

\item{...}{Parameters passed to the mode functions. See
\code{\link[stats]{cor}}, \code{\link{calculateKSimilarity}} and
\code{\link{calculateEuclideanDistance}}.}
}
\value{
The node metric similarity for the two arrays. In the case of
  \code{mode="cor"} this is a correlation coefficient between -1 and 1. For
  rank k-similarity (\code{mode="ksim"}) this is a similarity measure between
  0 and 1. Finally, Euclidean distance (\code{mode="L2"}) is non-negative and
  describes \emph{distance} rather than similarity. For correlations and rank
  k-similarity, higher values denote better overlap. For Euclidean distance
  higher values denote dissimilarity.
}
\description{
\code{getNodeSimilarity()} compares two node metric vectors in one of three
ways: via a correlation coefficient, rank k-similarity or Euclidean distance.
}
\examples{
# Generate two node metric vectors
D1 <- rpois(10, 4); D2 <- rpois(10, 3)
D <- list(D1, D2)
# Calculate their Spearman correlation coefficient
getNodeSimilarity(D, mode="cor", method="spearman")
# Calculate their rank k-similarity for k=3.
getNodeSimilarity(D, mode="ksim", k.or.p=3)
# Calculate their Euclidean distance without rescaling
getNodeSimilarity(D, mode="L2", scale=FALSE)

}
