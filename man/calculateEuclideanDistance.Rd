% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal.R
\name{calculateEuclideanDistance}
\alias{calculateEuclideanDistance}
\title{Euclidean distance}
\usage{
calculateEuclideanDistance(D1, D2, scale = FALSE)
}
\arguments{
\item{D1, D2}{Numeric arrays of equal length and labels, such as node metric
values (e.g. two alternative degree sequences).}

\item{scale}{Logical; Whether to scale \code{D1} and \code{D2} to [0; 1]
prior to calculating the distance between them. Defaults to \code{FALSE}.}
}
\value{
The Euclidean distance between the two arrays. If \code{scale=TRUE},
  the arrays are first normalised using \deqn{D_scaled =
  (D-min(D))/(max(D)-min(D)).} The Euclidean distance is then calculated and
  is further divided by \code{sqrt(length(D1))} so it maps to [0; 1].
}
\description{
This function computes the Euclidean distance between two numeric arrays. The
arrays can be rescaled prior to calculation.
}
\examples{
# Generate two node metric vectors
D1 <- rpois(100, 4); D2 <- rpois(100, 3)
# Calculate their Euclidean distance without scaling
calculateEuclideanDistance(D1, D2, scale=FALSE)
# Calculate their Euclidean distance with scaling
calculateEuclideanDistance(D1, D2, scale=TRUE)

}
